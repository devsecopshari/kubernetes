apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume-data0
  labels:
    type: local
spec:
  storageClassName: manual
  persistentVolumeReclaimPolicy: Recycle
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: <NFS Server IP>
    path: "/var/backup/data0"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume-data1
  labels:
    type: local
spec:
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: <NFS Server IP>
    path: "/var/backup/data1"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume-data2
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: <NFS Server IP>
    path: "/var/backup/data2"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    targetPort: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  #podManagementPolicy: Parallel #(default: Ordered)
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: manual
      resources:
        requests:
          storage: 500Mi